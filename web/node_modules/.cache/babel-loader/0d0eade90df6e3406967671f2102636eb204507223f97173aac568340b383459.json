{"ast":null,"code":"const {\n  request,\n  responseHandler\n} = require(\"../utils/RequestUtils\");\nconst requestMapping = \"/group\";\n\n/**\n* Get Groups Paginated\n* @param query\n* @returns Groups\n*/\nexport const getGroupList = async query => {\n  return request.get(requestMapping, {\n    params: {\n      ...query\n    }\n  }).then(responseHandler);\n};\n\n/**\n* Query a Group by id\n* @param id\n* @returns Group\n*/\nexport const getGroup = async id => {\n  return request.get(requestMapping + \"/\" + id).then(responseHandler);\n};\n\n/**\n* Upsert Group\n* @param body\n*/\nexport const saveGroup = async body => {\n  return request.post(requestMapping, body).then(responseHandler);\n};\n\n/**\n* Delete Group\n* @param id\n*/\nexport const deleteGroup = async id => {\n  return request.delete(requestMapping + \"/\" + id).then(responseHandler);\n};\n\n/**\n* Get All Group's IDs\n* @returns IDs\n*/\nexport const getAllGroupId = async () => {\n  return request.get(requestMapping + \"/getAllId\").then(responseHandler);\n};","map":{"version":3,"names":["request","responseHandler","require","requestMapping","getGroupList","query","get","params","then","getGroup","id","saveGroup","body","post","deleteGroup","delete","getAllGroupId"],"sources":["D:/8543/9900/project/web/src/api/GroupAPI.js"],"sourcesContent":["const { request, responseHandler } = require(\"../utils/RequestUtils\");\n\nconst requestMapping = \"/group\";\n\n/**\n* Get Groups Paginated\n* @param query\n* @returns Groups\n*/\nexport const getGroupList = async (query) => {\n  return request\n      .get(requestMapping, { params: { ...query } })\n      .then(responseHandler);\n};\n\n/**\n* Query a Group by id\n* @param id\n* @returns Group\n*/\nexport const getGroup = async (id) => {\n  return request.get(requestMapping + \"/\" + id).then(responseHandler);\n};\n\n/**\n* Upsert Group\n* @param body\n*/\nexport const saveGroup = async (body) => {\n  return request.post(requestMapping, body).then(responseHandler);\n};\n\n/**\n* Delete Group\n* @param id\n*/\nexport const deleteGroup= async (id) => {\n  return request.delete(requestMapping + \"/\" + id).then(responseHandler);\n};\n\n/**\n* Get All Group's IDs\n* @returns IDs\n*/\nexport const getAllGroupId= async () => {\n  return request.get(requestMapping + \"/getAllId\").then(responseHandler);\n};\n"],"mappings":"AAAA,MAAM;EAAEA,OAAO;EAAEC;AAAgB,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAErE,MAAMC,cAAc,GAAG,QAAQ;;AAE/B;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;EAC3C,OAAOL,OAAO,CACTM,GAAG,CAACH,cAAc,EAAE;IAAEI,MAAM,EAAE;MAAE,GAAGF;IAAM;EAAE,CAAC,CAAC,CAC7CG,IAAI,CAACP,eAAe,CAAC;AAC5B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMQ,QAAQ,GAAG,MAAOC,EAAE,IAAK;EACpC,OAAOV,OAAO,CAACM,GAAG,CAACH,cAAc,GAAG,GAAG,GAAGO,EAAE,CAAC,CAACF,IAAI,CAACP,eAAe,CAAC;AACrE,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMU,SAAS,GAAG,MAAOC,IAAI,IAAK;EACvC,OAAOZ,OAAO,CAACa,IAAI,CAACV,cAAc,EAAES,IAAI,CAAC,CAACJ,IAAI,CAACP,eAAe,CAAC;AACjE,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMa,WAAW,GAAE,MAAOJ,EAAE,IAAK;EACtC,OAAOV,OAAO,CAACe,MAAM,CAACZ,cAAc,GAAG,GAAG,GAAGO,EAAE,CAAC,CAACF,IAAI,CAACP,eAAe,CAAC;AACxE,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMe,aAAa,GAAE,MAAAA,CAAA,KAAY;EACtC,OAAOhB,OAAO,CAACM,GAAG,CAACH,cAAc,GAAG,WAAW,CAAC,CAACK,IAAI,CAACP,eAAe,CAAC;AACxE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}