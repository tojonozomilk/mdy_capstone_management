{"ast":null,"code":"export default {\n  name: 'UserEdit',\n  props: {\n    form: Object,\n    onSubmit: Function\n  },\n  data() {\n    return {\n      editForm: this.form,\n      fileList: [],\n      requiredRole: this.form.id && sessionStorage.getItem('role') === 'Administrator',\n      formRules: {\n        username: [{\n          required: true,\n          message: 'Please enter Username',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'Please enter Password',\n          trigger: 'blur'\n        }],\n        avatar: [{\n          required: true,\n          message: 'Please upload Avatar',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: 'Please enter Email',\n          trigger: 'blur'\n        }],\n        role: [{\n          required: this.requiredRole,\n          message: 'Please enter Role',\n          trigger: 'blur'\n        }],\n        affiliation: [{\n          required: true,\n          message: 'Please enter Affiliation',\n          trigger: 'blur'\n        }],\n        preference: [{\n          required: true,\n          message: 'Please enter Preference',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  watch: {\n    form(form) {\n      if (form) {\n        this.editForm = form;\n        if (form.avatar && form.avatar != this.fileList?.[0]?.name) {\n          this.fileList = [{\n            name: form.avatar,\n            url: `http://localhost:8080${form.avatar}`\n          }];\n        }\n      }\n    }\n  },\n  methods: {\n    onSave() {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          this.onSubmit();\n        }\n      });\n    },\n    handleUploadAvatar(response) {\n      const url = response.data;\n      this.editForm.avatar = url;\n      this.fileList = [{\n        name: url,\n        url: `http://localhost:8080${url}`\n      }];\n    },\n    handleRemoveAvatar() {\n      this.editForm.avatar = null;\n    }\n  }\n};","map":{"version":3,"names":["name","props","form","Object","onSubmit","Function","data","editForm","fileList","requiredRole","id","sessionStorage","getItem","formRules","username","required","message","trigger","password","avatar","email","role","affiliation","preference","watch","url","methods","onSave","$refs","userForm","validate","valid","handleUploadAvatar","response","handleRemoveAvatar"],"sources":["src/components/edit/UserEdit.vue"],"sourcesContent":["<template>\n    <!-- 新增/编辑User表单 -->\n    <div>\n        <el-form :model=\"editForm\" :rules=\"formRules\" ref=\"userForm\" label-width=\"100px\"\n            style=\"margin-bottom: 30px; margin-right: 30px; text-align: left;\">\n            <el-form-item label=\"ID\" prop=\"id\" hidden>\n                <el-input v-model=\"editForm.id\" />\n            </el-form-item>\n            <el-form-item label=\"Username\" prop=\"username\">\n                <el-input v-model=\"editForm.username\" />\n            </el-form-item>\n            <el-form-item label=\"Password\" prop=\"password\">\n                <el-input show-password v-model=\"editForm.password\" />\n            </el-form-item>\n            <el-form-item label=\"Avatar\" prop=\"avatar\">\n                <el-upload action=\"http://localhost:8080/api/upload\" name=\"file\" list-type=\"picture-card\"\n                    multiple=\"false\" :file-list=\"fileList\" accept=\"jpeg,jpg,png\" :on-success=\"handleUploadAvatar\"\n                    :on-remove=\"handleRemoveAvatar\">\n                    <i class=\"el-icon-upload\"></i>\n                    <div slot=\"tip\">Only support jpg/png, size less than 500kb</div>\n                </el-upload>\n            </el-form-item>\n            <el-form-item label=\"Email\" prop=\"email\">\n                <el-input v-model=\"editForm.email\" />\n            </el-form-item>\n            <el-form-item label=\"Role\" prop=\"role\" :hidden=\"!requiredRole\">\n                <el-select v-model=\"editForm.role\" placeholder=\"Please select\">\n                    <el-option label=\"Administrator\" value=\"Administrator\" />\n                    <el-option label=\"ProjectClient\" value=\"ProjectClient\" />\n                    <el-option label=\"Tutor\" value=\"Tutor\" />\n                    <el-option label=\"Coordinator\" value=\"Coordinator\" />\n                    <el-option label=\"Student\" value=\"Student\" />\n                </el-select>\n            </el-form-item>\n            <el-form-item label=\"Affiliation\" prop=\"affiliation\">\n                <el-input v-model=\"editForm.affiliation\" />\n            </el-form-item>\n            <el-form-item label=\"Preference\" prop=\"preference\">\n                <el-select v-model=\"editForm.preference\" placeholder=\"Please select\">\n                    <el-option label=\"Research\" value=\"Research\" />\n                    <el-option label=\"Application\" value=\"Application\" />\n                </el-select>\n            </el-form-item>\n            <el-form-item label=\"Creation Date\" prop=\"createDate\" hidden>\n                <el-input v-model=\"editForm.createDate\" />\n            </el-form-item>\n            <el-form-item label=\"Amend Date\" prop=\"amendDate\" hidden>\n                <el-input v-model=\"editForm.amendDate\" />\n            </el-form-item>\n            <el-form-item style=\"text-align: right;\">\n                <el-button type=\"primary\" @click=\"onSave()\">Submit</el-button>\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'UserEdit',\n    props: {\n        form: Object,\n        onSubmit: Function,\n    },\n    data() {\n        return {\n            editForm: this.form,\n            fileList: [],\n            requiredRole: this.form.id && sessionStorage.getItem('role') === 'Administrator',\n            formRules: {\n                username: [{ required: true, message: 'Please enter Username', trigger: 'blur' }],\n                password: [{ required: true, message: 'Please enter Password', trigger: 'blur' }],\n                avatar: [{ required: true, message: 'Please upload Avatar', trigger: 'blur' }],\n                email: [{ required: true, message: 'Please enter Email', trigger: 'blur' }],\n                role: [{ required: this.requiredRole, message: 'Please enter Role', trigger: 'blur' }],\n                affiliation: [{ required: true, message: 'Please enter Affiliation', trigger: 'blur' }],\n                preference: [{ required: true, message: 'Please enter Preference', trigger: 'blur' }],\n            },\n        };\n    },\n    watch: {\n        form(form) {\n            if (form) {\n                this.editForm = form;\n                if (form.avatar && form.avatar != this.fileList?.[0]?.name) {\n                    this.fileList = [{ name: form.avatar, url: `http://localhost:8080${form.avatar}` }];\n                }\n            }\n        }\n    },\n    methods: {\n        onSave() {\n            this.$refs.userForm.validate(valid => {\n                if (valid) {\n                    this.onSubmit()\n                }\n            });\n        },\n        handleUploadAvatar(response) {\n            const url = response.data\n            this.editForm.avatar = url\n            this.fileList = [{ name: url, url: `http://localhost:8080${url}` }]\n        },\n        handleRemoveAvatar() {\n            this.editForm.avatar = null\n        }\n    }\n}\n</script>"],"mappings":"AAyDA;EACAA,IAAA;EACAC,KAAA;IACAC,IAAA,EAAAC,MAAA;IACAC,QAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,QAAA,OAAAL,IAAA;MACAM,QAAA;MACAC,YAAA,OAAAP,IAAA,CAAAQ,EAAA,IAAAC,cAAA,CAAAC,OAAA;MACAC,SAAA;QACAC,QAAA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAC,QAAA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAE,MAAA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAG,KAAA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAI,IAAA;UAAAN,QAAA,OAAAN,YAAA;UAAAO,OAAA;UAAAC,OAAA;QAAA;QACAK,WAAA;UAAAP,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAM,UAAA;UAAAR,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAO,KAAA;IACAtB,SAAA;MACA,IAAAA,IAAA;QACA,KAAAK,QAAA,GAAAL,IAAA;QACA,IAAAA,IAAA,CAAAiB,MAAA,IAAAjB,IAAA,CAAAiB,MAAA,SAAAX,QAAA,OAAAR,IAAA;UACA,KAAAQ,QAAA;YAAAR,IAAA,EAAAE,IAAA,CAAAiB,MAAA;YAAAM,GAAA,0BAAAvB,IAAA,CAAAiB,MAAA;UAAA;QACA;MACA;IACA;EACA;EACAO,OAAA;IACAC,OAAA;MACA,KAAAC,KAAA,CAAAC,QAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAA3B,QAAA;QACA;MACA;IACA;IACA4B,mBAAAC,QAAA;MACA,MAAAR,GAAA,GAAAQ,QAAA,CAAA3B,IAAA;MACA,KAAAC,QAAA,CAAAY,MAAA,GAAAM,GAAA;MACA,KAAAjB,QAAA;QAAAR,IAAA,EAAAyB,GAAA;QAAAA,GAAA,0BAAAA,GAAA;MAAA;IACA;IACAS,mBAAA;MACA,KAAA3B,QAAA,CAAAY,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}