{"ast":null,"code":"import { approve, reject, getMyApproval } from '@/api/FrontAPI';\nimport { getAllUserId } from \"@/api/UserAPI\";\nimport ApprovalTable from '@/components/table/ApprovalTable.vue';\nimport { errorHandler } from '@/utils/RequestUtils';\nexport default {\n  components: {\n    ApprovalTable\n  },\n  data() {\n    return {\n      loading: false,\n      options: {\n        allUserId: []\n      },\n      approvalPageData: {\n        page: 0,\n        size: 0,\n        total: 0,\n        content: []\n      }\n    };\n  },\n  created() {\n    this.fetchApprovalData();\n    this.getAllOptions();\n  },\n  methods: {\n    fetchApprovalData(page = 1, size = 10) {\n      getMyApproval({\n        page,\n        size,\n        ...this.approvalSearchForm\n      }).then(res => {\n        this.approvalPageData.page = res.page;\n        this.approvalPageData.size = res.size;\n        this.approvalPageData.total = res.total;\n        this.approvalPageData.content = res.content;\n      }).catch(errorHandler);\n    },\n    onApprove(id) {\n      approve(id).then(() => {\n        this.$message.success(\"Approved successfully\");\n        this.fetchApprovalData();\n      }).catch(errorHandler);\n    },\n    onReject(id) {\n      reject(id).then(() => {\n        this.$message.success(\"Rejected successfully\");\n        this.fetchApprovalData();\n      }).catch(errorHandler);\n    },\n    getAllOptions() {\n      getAllUserId().then(res => {\n        this.options.allUserId = res;\n      }).catch(errorHandler);\n    }\n  }\n};","map":{"version":3,"names":["approve","reject","getMyApproval","getAllUserId","ApprovalTable","errorHandler","components","data","loading","options","allUserId","approvalPageData","page","size","total","content","created","fetchApprovalData","getAllOptions","methods","approvalSearchForm","then","res","catch","onApprove","id","$message","success","onReject"],"sources":["src/views/ApprovalView.vue"],"sourcesContent":["<template>\n    <el-card class=\"lsit-card\">\n        <div slot=\"header\">\n            <span>Approvals</span>\n        </div>\n\n        <!-- Approval列表 -->\n        <ApprovalTable :loading=\"loading\" :pageData=\"approvalPageData\" :onApprove=\"onApprove\"\n            :onFetchData=\"fetchApprovalData\" :onReject=\"onReject\" :options=\"options\" />\n    </el-card>\n</template>\n\n<script>\nimport { approve, reject, getMyApproval } from '@/api/FrontAPI';\nimport { getAllUserId } from \"@/api/UserAPI\";\nimport ApprovalTable from '@/components/table/ApprovalTable.vue';\nimport { errorHandler } from '@/utils/RequestUtils';\nexport default {\n    components: {\n        ApprovalTable\n    },\n    data() {\n        return {\n            loading: false,\n            options: {\n                allUserId: [],\n            },\n            approvalPageData: {\n                page: 0,\n                size: 0,\n                total: 0,\n                content: [],\n            },\n        };\n    },\n    created() {\n        this.fetchApprovalData();\n        this.getAllOptions();\n    },\n    methods: {\n        fetchApprovalData(page = 1, size = 10) {\n            getMyApproval({ page, size, ...this.approvalSearchForm })\n                .then(res => {\n                    this.approvalPageData.page = res.page;\n                    this.approvalPageData.size = res.size;\n                    this.approvalPageData.total = res.total;\n                    this.approvalPageData.content = res.content;\n                })\n                .catch(errorHandler);\n        },\n        onApprove(id) {\n            approve(id)\n                .then(() => {\n                    this.$message.success(\"Approved successfully\")\n                    this.fetchApprovalData();\n                })\n                .catch(errorHandler);\n        },\n        onReject(id) {\n            reject(id)\n                .then(() => {\n                    this.$message.success(\"Rejected successfully\")\n                    this.fetchApprovalData();\n                })\n                .catch(errorHandler);\n        },\n        getAllOptions() {\n            getAllUserId()\n                .then(res => {\n                    this.options.allUserId = res\n                })\n                .catch(errorHandler);\n        },\n    }\n};\n</script>"],"mappings":"AAaA,SAAAA,OAAA,EAAAC,MAAA,EAAAC,aAAA;AACA,SAAAC,YAAA;AACA,OAAAC,aAAA;AACA,SAAAC,YAAA;AACA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,OAAA;MACAC,OAAA;QACAC,SAAA;MACA;MACAC,gBAAA;QACAC,IAAA;QACAC,IAAA;QACAC,KAAA;QACAC,OAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,iBAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAF,kBAAAL,IAAA,MAAAC,IAAA;MACAX,aAAA;QAAAU,IAAA;QAAAC,IAAA;QAAA,QAAAO;MAAA,GACAC,IAAA,CAAAC,GAAA;QACA,KAAAX,gBAAA,CAAAC,IAAA,GAAAU,GAAA,CAAAV,IAAA;QACA,KAAAD,gBAAA,CAAAE,IAAA,GAAAS,GAAA,CAAAT,IAAA;QACA,KAAAF,gBAAA,CAAAG,KAAA,GAAAQ,GAAA,CAAAR,KAAA;QACA,KAAAH,gBAAA,CAAAI,OAAA,GAAAO,GAAA,CAAAP,OAAA;MACA,GACAQ,KAAA,CAAAlB,YAAA;IACA;IACAmB,UAAAC,EAAA;MACAzB,OAAA,CAAAyB,EAAA,EACAJ,IAAA;QACA,KAAAK,QAAA,CAAAC,OAAA;QACA,KAAAV,iBAAA;MACA,GACAM,KAAA,CAAAlB,YAAA;IACA;IACAuB,SAAAH,EAAA;MACAxB,MAAA,CAAAwB,EAAA,EACAJ,IAAA;QACA,KAAAK,QAAA,CAAAC,OAAA;QACA,KAAAV,iBAAA;MACA,GACAM,KAAA,CAAAlB,YAAA;IACA;IACAa,cAAA;MACAf,YAAA,GACAkB,IAAA,CAAAC,GAAA;QACA,KAAAb,OAAA,CAAAC,SAAA,GAAAY,GAAA;MACA,GACAC,KAAA,CAAAlB,YAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}