{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getNotifications, readNotification } from '@/api/FrontAPI';\nimport { deleteMessage } from '@/api/MessageAPI';\nimport { errorHandler } from '@/utils/RequestUtils';\nexport default {\n  data() {\n    return {\n      data: [],\n      length: 0\n    };\n  },\n  created() {\n    this.onGetNotifications();\n  },\n  methods: {\n    onGetNotifications() {\n      getNotifications().then(res => {\n        this.data = res;\n        this.length = this.data.filter(item => !item.isRead).length;\n        setTimeout(() => {\n          this.timer = setTimeout(() => {\n            this.onGetNotifications();\n          }, 5000);\n        }, 5000);\n      }).catch(errorHandler);\n    },\n    readMessage(notice) {\n      readNotification(notice.id);\n      if (notice.type === 'Chat') {\n        this.$router.push('/chat/' + notice.senderId);\n      } else {\n        getNotifications().then(res => {\n          this.data = res;\n          this.length = this.data.filter(item => !item.isRead).length;\n        }).catch(errorHandler);\n      }\n    },\n    deleteNotice(notice) {\n      deleteMessage(notice.id).then(() => {\n        this.$message.warning(\"Deleted successfully\");\n        getNotifications().then(res => {\n          this.data = res;\n          this.length = this.data.filter(item => !item.isRead).length;\n        }).catch(errorHandler);\n      }).catch(errorHandler);\n    }\n  },\n  beforeDestroy() {\n    clearTimeout(this.timer);\n  }\n};","map":{"version":3,"names":["getNotifications","readNotification","deleteMessage","errorHandler","data","length","created","onGetNotifications","methods","then","res","filter","item","isRead","setTimeout","timer","catch","readMessage","notice","id","type","$router","push","senderId","deleteNotice","$message","warning","beforeDestroy","clearTimeout"],"sources":["src/components/message/NoticeButton.vue"],"sourcesContent":["<template>\r\n    <el-popover placement=\"top-start\" width=\"300\" trigger=\"hover\" :disabled=\"data.length === 0\">\r\n        <div v-for=\"notice in data\" :key=\"notice.id\">\r\n            <el-row>\r\n                <el-col :span=\"20\" style=\"padding-right:5px\"><span>{{ notice.type === 'Chat' ? notice.sender : 'System'\r\n                        }}: {{ notice.content\r\n                        }}</span></el-col>\r\n                <el-col :span=\"2\" v-if=\"!notice.isRead\"> <el-link @click=\"() => readMessage(notice)\"><i\r\n                            :class=\"notice.type === 'Chat' ? 'el-icon-chat-round' : 'el-icon-circle-check'\" /></el-link>\r\n                </el-col>\r\n                <el-col :span=\"2\" v-if=\"notice.type === 'Notice'\">\r\n                    <el-link @click=\"() => deleteNotice(notice)\"><i class='el-icon-delete' /></el-link>\r\n                </el-col>\r\n            </el-row>\r\n        </div>\r\n\r\n        <el-badge :value=\"length\" slot=\"reference\" :hidden=\"length === 0\">\r\n            <el-button size=\"mini\" icon=\"el-icon-bell\" round />\r\n        </el-badge>\r\n    </el-popover>\r\n</template>\r\n\r\n<script>\r\nimport { getNotifications, readNotification } from '@/api/FrontAPI';\r\nimport { deleteMessage } from '@/api/MessageAPI';\r\nimport { errorHandler } from '@/utils/RequestUtils';\r\nexport default {\r\n    data() {\r\n        return {\r\n            data: [],\r\n            length: 0,\r\n        };\r\n    },\r\n    created() {\r\n        this.onGetNotifications()\r\n    },\r\n    methods: {\r\n        onGetNotifications() {\r\n            getNotifications()\r\n                .then(res => {\r\n                    this.data = res;\r\n                    this.length = this.data.filter(item => !item.isRead).length\r\n\r\n                    setTimeout(() => {\r\n                        this.timer = setTimeout(() => {\r\n                            this.onGetNotifications();\r\n                        }, 5000);\r\n                    }, 5000);\r\n                })\r\n                .catch(errorHandler);\r\n        },\r\n        readMessage(notice) {\r\n            readNotification(notice.id)\r\n            if (notice.type === 'Chat') {\r\n                this.$router.push('/chat/' + notice.senderId)\r\n            } else {\r\n                getNotifications()\r\n                    .then(res => {\r\n                        this.data = res;\r\n                        this.length = this.data.filter(item => !item.isRead).length\r\n                    })\r\n                    .catch(errorHandler);\r\n            }\r\n        },\r\n        deleteNotice(notice) {\r\n            deleteMessage(notice.id)\r\n                .then(() => {\r\n                    this.$message.warning(\"Deleted successfully\")\r\n                    getNotifications()\r\n                        .then(res => {\r\n                            this.data = res;\r\n                            this.length = this.data.filter(item => !item.isRead).length\r\n                        })\r\n                        .catch(errorHandler);\r\n                })\r\n                .catch(errorHandler);\r\n        }\r\n    },\r\n    beforeDestroy() {\r\n        clearTimeout(this.timer);\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.notice-span {\r\n    margin: 2px;\r\n}\r\n</style>"],"mappings":";AAuBA,SAAAA,gBAAA,EAAAC,gBAAA;AACA,SAAAC,aAAA;AACA,SAAAC,YAAA;AACA;EACAC,KAAA;IACA;MACAA,IAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,kBAAA;EACA;EACAC,OAAA;IACAD,mBAAA;MACAP,gBAAA,GACAS,IAAA,CAAAC,GAAA;QACA,KAAAN,IAAA,GAAAM,GAAA;QACA,KAAAL,MAAA,QAAAD,IAAA,CAAAO,MAAA,CAAAC,IAAA,KAAAA,IAAA,CAAAC,MAAA,EAAAR,MAAA;QAEAS,UAAA;UACA,KAAAC,KAAA,GAAAD,UAAA;YACA,KAAAP,kBAAA;UACA;QACA;MACA,GACAS,KAAA,CAAAb,YAAA;IACA;IACAc,YAAAC,MAAA;MACAjB,gBAAA,CAAAiB,MAAA,CAAAC,EAAA;MACA,IAAAD,MAAA,CAAAE,IAAA;QACA,KAAAC,OAAA,CAAAC,IAAA,YAAAJ,MAAA,CAAAK,QAAA;MACA;QACAvB,gBAAA,GACAS,IAAA,CAAAC,GAAA;UACA,KAAAN,IAAA,GAAAM,GAAA;UACA,KAAAL,MAAA,QAAAD,IAAA,CAAAO,MAAA,CAAAC,IAAA,KAAAA,IAAA,CAAAC,MAAA,EAAAR,MAAA;QACA,GACAW,KAAA,CAAAb,YAAA;MACA;IACA;IACAqB,aAAAN,MAAA;MACAhB,aAAA,CAAAgB,MAAA,CAAAC,EAAA,EACAV,IAAA;QACA,KAAAgB,QAAA,CAAAC,OAAA;QACA1B,gBAAA,GACAS,IAAA,CAAAC,GAAA;UACA,KAAAN,IAAA,GAAAM,GAAA;UACA,KAAAL,MAAA,QAAAD,IAAA,CAAAO,MAAA,CAAAC,IAAA,KAAAA,IAAA,CAAAC,MAAA,EAAAR,MAAA;QACA,GACAW,KAAA,CAAAb,YAAA;MACA,GACAa,KAAA,CAAAb,YAAA;IACA;EACA;EACAwB,cAAA;IACAC,YAAA,MAAAb,KAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}