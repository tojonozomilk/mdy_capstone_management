{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getSummary } from '@/api/FrontAPI';\nimport { getAllUserId } from \"@/api/UserAPI\";\nimport { getAllProjectId } from \"@/api/ProjectAPI\";\nimport ProjectTable from '@/components/table/ProjectTable.vue';\nimport GroupTable from '@/components/table/GroupTable.vue';\nimport { errorHandler } from '@/utils/RequestUtils';\nexport default {\n  components: {\n    ProjectTable,\n    GroupTable\n  },\n  data() {\n    return {\n      data: {\n        projectList: [],\n        groupList: []\n      },\n      options: {\n        allUserId: [],\n        allProjectId: []\n      },\n      projectPageData: {\n        page: 0,\n        size: 0,\n        total: 0,\n        content: []\n      }\n    };\n  },\n  created() {\n    this.fetchProjectData();\n    this.getAllOptions();\n  },\n  methods: {\n    fetchProjectData() {\n      getSummary().then(res => {\n        this.data = res;\n      }).catch(errorHandler);\n    },\n    showViewProject(id) {\n      this.$router.push('/project/' + id);\n    },\n    showViewGroup(id) {\n      this.$router.push('/group/' + id);\n    },\n    getAllOptions() {\n      getAllUserId().then(res => {\n        this.options.allUserId = res;\n      }).catch(errorHandler);\n      getAllProjectId().then(res => {\n        this.options.allProjectId = res;\n      }).catch(errorHandler);\n    }\n  }\n};","map":{"version":3,"names":["getSummary","getAllUserId","getAllProjectId","ProjectTable","GroupTable","errorHandler","components","data","projectList","groupList","options","allUserId","allProjectId","projectPageData","page","size","total","content","created","fetchProjectData","getAllOptions","methods","then","res","catch","showViewProject","id","$router","push","showViewGroup"],"sources":["src/views/DashboardView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-card class=\"dashboard-card\">\r\n            <div slot=\"header\" class=\"clearfix\">\r\n                <span>My Projects</span>\r\n            </div>\r\n            <!-- Project列表 -->\r\n            <ProjectTable :options=\"options\" :dataList=\"data.projectList\" :onView=\"showViewProject\" />\r\n        </el-card>\r\n        <el-divider />\r\n        <el-card class=\"my-card\">\r\n            <div slot=\"header\" class=\"clearfix\">\r\n                <span>My Groups</span>\r\n            </div>\r\n            <!-- Group列表 -->\r\n            <ul class=\"infinite-list\" v-infinite-scroll=\"load\" style=\"overflow:auto\">\r\n                <GroupTable :options=\"options\" :dataList=\"data.groupList\" :onView=\"showViewGroup\" />\r\n            </ul>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { getSummary } from '@/api/FrontAPI';\r\nimport { getAllUserId } from \"@/api/UserAPI\";\r\nimport { getAllProjectId } from \"@/api/ProjectAPI\";\r\nimport ProjectTable from '@/components/table/ProjectTable.vue';\r\nimport GroupTable from '@/components/table/GroupTable.vue';\r\nimport { errorHandler } from '@/utils/RequestUtils';\r\nexport default {\r\n    components: {\r\n        ProjectTable, GroupTable\r\n    },\r\n    data() {\r\n        return {\r\n            data: {\r\n                projectList: [],\r\n                groupList: [],\r\n            },\r\n            options: {\r\n                allUserId: [],\r\n                allProjectId: [],\r\n            },\r\n            projectPageData: {\r\n                page: 0,\r\n                size: 0,\r\n                total: 0,\r\n                content: [],\r\n            },\r\n        };\r\n    },\r\n    created() {\r\n        this.fetchProjectData();\r\n        this.getAllOptions();\r\n    },\r\n    methods: {\r\n        fetchProjectData() {\r\n            getSummary()\r\n                .then(res => {\r\n                    this.data = res;\r\n                })\r\n                .catch(errorHandler);\r\n        },\r\n        showViewProject(id) {\r\n            this.$router.push('/project/' + id)\r\n        },\r\n        showViewGroup(id) {\r\n            this.$router.push('/group/' + id)\r\n        },\r\n        getAllOptions() {\r\n            getAllUserId()\r\n                .then(res => {\r\n                    this.options.allUserId = res\r\n                })\r\n                .catch(errorHandler);\r\n            getAllProjectId()\r\n                .then(res => {\r\n                    this.options.allProjectId = res\r\n                })\r\n                .catch(errorHandler);\r\n        },\r\n    }\r\n};\r\n</script>"],"mappings":";AAuBA,SAAAA,UAAA;AACA,SAAAC,YAAA;AACA,SAAAC,eAAA;AACA,OAAAC,YAAA;AACA,OAAAC,UAAA;AACA,SAAAC,YAAA;AACA;EACAC,UAAA;IACAH,YAAA;IAAAC;EACA;EACAG,KAAA;IACA;MACAA,IAAA;QACAC,WAAA;QACAC,SAAA;MACA;MACAC,OAAA;QACAC,SAAA;QACAC,YAAA;MACA;MACAC,eAAA;QACAC,IAAA;QACAC,IAAA;QACAC,KAAA;QACAC,OAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,gBAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAF,iBAAA;MACAnB,UAAA,GACAsB,IAAA,CAAAC,GAAA;QACA,KAAAhB,IAAA,GAAAgB,GAAA;MACA,GACAC,KAAA,CAAAnB,YAAA;IACA;IACAoB,gBAAAC,EAAA;MACA,KAAAC,OAAA,CAAAC,IAAA,eAAAF,EAAA;IACA;IACAG,cAAAH,EAAA;MACA,KAAAC,OAAA,CAAAC,IAAA,aAAAF,EAAA;IACA;IACAN,cAAA;MACAnB,YAAA,GACAqB,IAAA,CAAAC,GAAA;QACA,KAAAb,OAAA,CAAAC,SAAA,GAAAY,GAAA;MACA,GACAC,KAAA,CAAAnB,YAAA;MACAH,eAAA,GACAoB,IAAA,CAAAC,GAAA;QACA,KAAAb,OAAA,CAAAE,YAAA,GAAAW,GAAA;MACA,GACAC,KAAA,CAAAnB,YAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}