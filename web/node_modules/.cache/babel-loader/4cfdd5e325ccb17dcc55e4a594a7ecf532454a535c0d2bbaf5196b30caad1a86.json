{"ast":null,"code":"import { getProjectManagerList } from '@/api/ProjectManagerAPI';\nimport { getProjectManager } from '@/api/ProjectManagerAPI';\nimport { saveProjectManager } from '@/api/ProjectManagerAPI';\nimport { deleteProjectManager } from '@/api/ProjectManagerAPI';\nimport { getAllProjectId } from \"@/api/ProjectAPI\";\nimport { getAllUserId } from \"@/api/UserAPI\";\nimport ProjectManagerEdit from '@/components/edit/ProjectManagerEdit.vue';\nimport ProjectManagerSearch from '@/components/search/ProjectManagerSearch.vue';\nimport ProjectManagerTable from '@/components/table/ProjectManagerTable.vue';\nimport { errorHandler } from '@/utils/RequestUtils';\nexport default {\n  components: {\n    ProjectManagerEdit,\n    ProjectManagerSearch,\n    ProjectManagerTable\n  },\n  data() {\n    return {\n      open: false,\n      loading: false,\n      title: \"\",\n      options: {\n        allProjectId: [],\n        allUserId: []\n      },\n      projectManagerForm: {},\n      projectManagerSearchForm: {},\n      projectManagerPageData: {\n        page: 0,\n        size: 0,\n        total: 0,\n        content: []\n      }\n    };\n  },\n  created() {\n    this.fetchProjectManagerData();\n    this.getAllOptions();\n  },\n  methods: {\n    fetchProjectManagerData(page = 1, size = 10) {\n      getProjectManagerList({\n        page,\n        size,\n        ...this.projectManagerSearchForm\n      }).then(res => {\n        this.projectManagerPageData.page = res.page;\n        this.projectManagerPageData.size = res.size;\n        this.projectManagerPageData.total = res.total;\n        this.projectManagerPageData.content = res.content;\n      }).catch(errorHandler);\n    },\n    resetProjectManagerSearchForm() {\n      this.projectManagerSearchForm = {};\n    },\n    showAddProjectManager() {\n      this.projectManagerForm = {};\n      this.open = true;\n      this.title = \"Add Project Manager\";\n    },\n    showEditProjectManager(id) {\n      getProjectManager(id).then(res => {\n        this.projectManagerForm = {\n          ...res\n        };\n        this.open = true;\n        this.title = \"Edit Project Manager\";\n      }).catch(errorHandler);\n    },\n    handleSaveProjectManager() {\n      saveProjectManager(this.projectManagerForm).then(() => {\n        this.open = false;\n        this.$message.success(\"Project Manager saved successfully\");\n        this.fetchProjectManagerData();\n      }).catch(errorHandler);\n    },\n    handleDeleteProjectManager(id) {\n      deleteProjectManager(id).then(() => {\n        this.$message.success(\"Project Manager deleted successfully\");\n        this.fetchProjectManagerData();\n      }).catch(errorHandler);\n    },\n    getAllOptions() {\n      getAllProjectId().then(res => {\n        this.options.allProjectId = res;\n      }).catch(errorHandler);\n      getAllUserId().then(res => {\n        this.options.allUserId = res;\n      }).catch(errorHandler);\n    }\n  }\n};","map":{"version":3,"names":["getProjectManagerList","getProjectManager","saveProjectManager","deleteProjectManager","getAllProjectId","getAllUserId","ProjectManagerEdit","ProjectManagerSearch","ProjectManagerTable","errorHandler","components","data","open","loading","title","options","allProjectId","allUserId","projectManagerForm","projectManagerSearchForm","projectManagerPageData","page","size","total","content","created","fetchProjectManagerData","getAllOptions","methods","then","res","catch","resetProjectManagerSearchForm","showAddProjectManager","showEditProjectManager","id","handleSaveProjectManager","$message","success","handleDeleteProjectManager"],"sources":["src/views/admin/ProjectManagerView.vue"],"sourcesContent":["<template>\n    <div>\n        <!-- Project Manager搜索栏 -->\n        <ProjectManagerSearch :form=\"projectManagerSearchForm\" :options=\"options\" :onSearch=\"fetchProjectManagerData\"\n\t\t:onReset=\"resetProjectManagerSearchForm\" :onAdd=\"showAddProjectManager\" />\n\n        <!-- Project Manager列表 -->\n        <ProjectManagerTable :loading=\"loading\" :options=\"options\" :pageData=\"projectManagerPageData\" :onEdit=\"showEditProjectManager\"\n            :onFetchData=\"fetchProjectManagerData\" :onDelete=\"handleDeleteProjectManager\" />\n\n        <!-- 新增/编辑Project Manager的弹出框 -->\n        <el-dialog :title=\"title\" width=\"30%\" :visible.sync=\"open\">\n            <ProjectManagerEdit :form=\"projectManagerForm\" :options=\"options\" :onSubmit=\"handleSaveProjectManager\" />\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport { getProjectManagerList } from '@/api/ProjectManagerAPI';\nimport { getProjectManager } from '@/api/ProjectManagerAPI';\nimport { saveProjectManager } from '@/api/ProjectManagerAPI';\nimport { deleteProjectManager } from '@/api/ProjectManagerAPI';\nimport { getAllProjectId } from \"@/api/ProjectAPI\";\nimport { getAllUserId } from \"@/api/UserAPI\";\nimport ProjectManagerEdit from '@/components/edit/ProjectManagerEdit.vue';\nimport ProjectManagerSearch from '@/components/search/ProjectManagerSearch.vue';\nimport ProjectManagerTable from '@/components/table/ProjectManagerTable.vue';\nimport { errorHandler } from '@/utils/RequestUtils';\nexport default {\n    components: {\n        ProjectManagerEdit,\n        ProjectManagerSearch,\n        ProjectManagerTable\n    },\n    data() {\n        return {\n            open: false,\n            loading: false,\n            title: \"\",\n            options: {\n                allProjectId: [],\n                allUserId: [],\n            },\n            projectManagerForm: {},\n            projectManagerSearchForm: {},\n            projectManagerPageData: {\n                page: 0,\n                size: 0,\n                total: 0,\n                content: [],\n            },\n        };\n    },\n    created() {\n        this.fetchProjectManagerData();\n        this.getAllOptions();\n    },\n    methods: {\n        fetchProjectManagerData(page = 1, size = 10) {\n            getProjectManagerList({ page, size, ...this.projectManagerSearchForm })\n                .then(res => {\n                    this.projectManagerPageData.page = res.page;\n                    this.projectManagerPageData.size = res.size;\n                    this.projectManagerPageData.total = res.total;\n                    this.projectManagerPageData.content = res.content;\n                })\n                .catch(errorHandler);\n        },\n        resetProjectManagerSearchForm() {\n            this.projectManagerSearchForm = {}\n        },\n        showAddProjectManager() {\n            this.projectManagerForm = {};\n            this.open = true;\n            this.title = \"Add Project Manager\"\n        },\n        showEditProjectManager(id) {\n            getProjectManager(id)\n                .then(res => {\n                    this.projectManagerForm = { ...res };\n                    this.open = true;\n                    this.title = \"Edit Project Manager\"\n                })\n                .catch(errorHandler);\n        },\n        handleSaveProjectManager() {\n            saveProjectManager(this.projectManagerForm)\n                .then(() => {\n                    this.open = false;\n                    this.$message.success(\"Project Manager saved successfully\")\n                    this.fetchProjectManagerData();\n                })\n                .catch(errorHandler);\n        },\n        handleDeleteProjectManager(id) {\n            deleteProjectManager(id)\n                .then(() => {\n                    this.$message.success(\"Project Manager deleted successfully\")\n                    this.fetchProjectManagerData();\n                })\n                .catch(errorHandler);\n        },\n        getAllOptions() {\n            getAllProjectId()\n                .then(res => {\n                    this.options.allProjectId = res\n                })\n                .catch(errorHandler);\n            getAllUserId()\n                .then(res => {\n                    this.options.allUserId = res\n                })\n                .catch(errorHandler);\n        }\n    }\n};\n</script>"],"mappings":"AAkBA,SAAAA,qBAAA;AACA,SAAAC,iBAAA;AACA,SAAAC,kBAAA;AACA,SAAAC,oBAAA;AACA,SAAAC,eAAA;AACA,SAAAC,YAAA;AACA,OAAAC,kBAAA;AACA,OAAAC,oBAAA;AACA,OAAAC,mBAAA;AACA,SAAAC,YAAA;AACA;EACAC,UAAA;IACAJ,kBAAA;IACAC,oBAAA;IACAC;EACA;EACAG,KAAA;IACA;MACAC,IAAA;MACAC,OAAA;MACAC,KAAA;MACAC,OAAA;QACAC,YAAA;QACAC,SAAA;MACA;MACAC,kBAAA;MACAC,wBAAA;MACAC,sBAAA;QACAC,IAAA;QACAC,IAAA;QACAC,KAAA;QACAC,OAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,uBAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAF,wBAAAL,IAAA,MAAAC,IAAA;MACAtB,qBAAA;QAAAqB,IAAA;QAAAC,IAAA;QAAA,QAAAH;MAAA,GACAU,IAAA,CAAAC,GAAA;QACA,KAAAV,sBAAA,CAAAC,IAAA,GAAAS,GAAA,CAAAT,IAAA;QACA,KAAAD,sBAAA,CAAAE,IAAA,GAAAQ,GAAA,CAAAR,IAAA;QACA,KAAAF,sBAAA,CAAAG,KAAA,GAAAO,GAAA,CAAAP,KAAA;QACA,KAAAH,sBAAA,CAAAI,OAAA,GAAAM,GAAA,CAAAN,OAAA;MACA,GACAO,KAAA,CAAAtB,YAAA;IACA;IACAuB,8BAAA;MACA,KAAAb,wBAAA;IACA;IACAc,sBAAA;MACA,KAAAf,kBAAA;MACA,KAAAN,IAAA;MACA,KAAAE,KAAA;IACA;IACAoB,uBAAAC,EAAA;MACAlC,iBAAA,CAAAkC,EAAA,EACAN,IAAA,CAAAC,GAAA;QACA,KAAAZ,kBAAA;UAAA,GAAAY;QAAA;QACA,KAAAlB,IAAA;QACA,KAAAE,KAAA;MACA,GACAiB,KAAA,CAAAtB,YAAA;IACA;IACA2B,yBAAA;MACAlC,kBAAA,MAAAgB,kBAAA,EACAW,IAAA;QACA,KAAAjB,IAAA;QACA,KAAAyB,QAAA,CAAAC,OAAA;QACA,KAAAZ,uBAAA;MACA,GACAK,KAAA,CAAAtB,YAAA;IACA;IACA8B,2BAAAJ,EAAA;MACAhC,oBAAA,CAAAgC,EAAA,EACAN,IAAA;QACA,KAAAQ,QAAA,CAAAC,OAAA;QACA,KAAAZ,uBAAA;MACA,GACAK,KAAA,CAAAtB,YAAA;IACA;IACAkB,cAAA;MACAvB,eAAA,GACAyB,IAAA,CAAAC,GAAA;QACA,KAAAf,OAAA,CAAAC,YAAA,GAAAc,GAAA;MACA,GACAC,KAAA,CAAAtB,YAAA;MACAJ,YAAA,GACAwB,IAAA,CAAAC,GAAA;QACA,KAAAf,OAAA,CAAAE,SAAA,GAAAa,GAAA;MACA,GACAC,KAAA,CAAAtB,YAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}