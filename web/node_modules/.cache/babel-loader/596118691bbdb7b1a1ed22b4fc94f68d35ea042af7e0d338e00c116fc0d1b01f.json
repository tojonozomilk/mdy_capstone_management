{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getProjectList } from '@/api/ProjectAPI';\nimport { getAllUserId } from \"@/api/UserAPI\";\nimport ProjectTable from '@/components/table/ProjectTable.vue';\nimport { errorHandler } from '@/utils/RequestUtils';\nexport default {\n  components: {\n    ProjectTable\n  },\n  data() {\n    return {\n      loading: false,\n      role: sessionStorage.getItem('role'),\n      options: {\n        allUserId: []\n      },\n      projectPageData: {\n        page: 0,\n        size: 0,\n        total: 0,\n        content: []\n      }\n    };\n  },\n  created() {\n    this.fetchProjectData();\n    this.getAllOptions();\n  },\n  methods: {\n    fetchProjectData(page = 1, size = 10) {\n      getProjectList({\n        page,\n        size,\n        ...this.projectSearchForm\n      }).then(res => {\n        this.projectPageData.page = res.page;\n        this.projectPageData.size = res.size;\n        this.projectPageData.total = res.total;\n        this.projectPageData.content = res.content;\n      }).catch(errorHandler);\n    },\n    showViewProject(id) {\n      this.$router.push('/project/' + id);\n    },\n    getAllOptions() {\n      getAllUserId().then(res => {\n        this.options.allUserId = res;\n      }).catch(errorHandler);\n    },\n    onAdd() {\n      this.$router.push('/project/0');\n    }\n  }\n};","map":{"version":3,"names":["getProjectList","getAllUserId","ProjectTable","errorHandler","components","data","loading","role","sessionStorage","getItem","options","allUserId","projectPageData","page","size","total","content","created","fetchProjectData","getAllOptions","methods","projectSearchForm","then","res","catch","showViewProject","id","$router","push","onAdd"],"sources":["src/views/ProjectView.vue"],"sourcesContent":["<template>\n    <el-card class=\"lsit-card\">\n        <div slot=\"header\" class=\"clearfix\">\n            <span>Projects</span>\n            <el-button v-if=\"role === 'ProjectClient'\" slot=\"reference\" style=\"float: right; padding: 3px\" type=\"success\" @click=\"onAdd\" icon=\"el-icon-plus\"/>\n        </div>\n        <!-- Project列表 -->\n        <ProjectTable :loading=\"loading\" :options=\"options\" :pageData=\"projectPageData\" :onView=\"showViewProject\"\n            :onFetchData=\"fetchProjectData\" />\n    </el-card>\n</template>\n\n<script>\nimport { getProjectList } from '@/api/ProjectAPI';\nimport { getAllUserId } from \"@/api/UserAPI\";\nimport ProjectTable from '@/components/table/ProjectTable.vue';\nimport { errorHandler } from '@/utils/RequestUtils';\nexport default {\n    components: {\n        ProjectTable\n    },\n    data() {\n        return {\n            loading: false,\n            role: sessionStorage.getItem('role'),\n            options: {\n                allUserId: [],\n            },\n            projectPageData: {\n                page: 0,\n                size: 0,\n                total: 0,\n                content: [],\n            },\n        };\n    },\n    created() {\n        this.fetchProjectData();\n        this.getAllOptions();\n    },\n    methods: {\n        fetchProjectData(page = 1, size = 10) {\n            getProjectList({ page, size, ...this.projectSearchForm })\n                .then(res => {\n                    this.projectPageData.page = res.page;\n                    this.projectPageData.size = res.size;\n                    this.projectPageData.total = res.total;\n                    this.projectPageData.content = res.content;\n                })\n                .catch(errorHandler);\n        },\n        showViewProject(id) {\n            this.$router.push('/project/' + id)\n        },\n        getAllOptions() {\n            getAllUserId()\n                .then(res => {\n                    this.options.allUserId = res\n                })\n                .catch(errorHandler);\n        },\n        onAdd() {\n            this.$router.push('/project/0')\n        }\n    }\n};\n</script>"],"mappings":";AAaA,SAAAA,cAAA;AACA,SAAAC,YAAA;AACA,OAAAC,YAAA;AACA,SAAAC,YAAA;AACA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,OAAA;MACAC,IAAA,EAAAC,cAAA,CAAAC,OAAA;MACAC,OAAA;QACAC,SAAA;MACA;MACAC,eAAA;QACAC,IAAA;QACAC,IAAA;QACAC,KAAA;QACAC,OAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,gBAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAF,iBAAAL,IAAA,MAAAC,IAAA;MACAd,cAAA;QAAAa,IAAA;QAAAC,IAAA;QAAA,QAAAO;MAAA,GACAC,IAAA,CAAAC,GAAA;QACA,KAAAX,eAAA,CAAAC,IAAA,GAAAU,GAAA,CAAAV,IAAA;QACA,KAAAD,eAAA,CAAAE,IAAA,GAAAS,GAAA,CAAAT,IAAA;QACA,KAAAF,eAAA,CAAAG,KAAA,GAAAQ,GAAA,CAAAR,KAAA;QACA,KAAAH,eAAA,CAAAI,OAAA,GAAAO,GAAA,CAAAP,OAAA;MACA,GACAQ,KAAA,CAAArB,YAAA;IACA;IACAsB,gBAAAC,EAAA;MACA,KAAAC,OAAA,CAAAC,IAAA,eAAAF,EAAA;IACA;IACAP,cAAA;MACAlB,YAAA,GACAqB,IAAA,CAAAC,GAAA;QACA,KAAAb,OAAA,CAAAC,SAAA,GAAAY,GAAA;MACA,GACAC,KAAA,CAAArB,YAAA;IACA;IACA0B,MAAA;MACA,KAAAF,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}