{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getUserInfo } from '@/api/FrontAPI';\nimport { errorHandler } from '@/utils/RequestUtils';\nexport default {\n  props: {\n    userId: Object,\n    username: Object\n  },\n  data() {\n    return {\n      isMe: sessionStorage.getItem('userId') == this.userId,\n      user: {}\n    };\n  },\n  methods: {\n    startChat() {\n      if (this.userId == sessionStorage.getItem('userId')) {\n        this.$message.warning(\"Cannot chat with youself\");\n        return;\n      }\n      this.$router.push('/chat/' + this.userId);\n    },\n    onShowUserInfo() {\n      console.log(this.isMe);\n      getUserInfo(this.userId).then(res => {\n        this.user = res;\n        this.user.url = `http://localhost:8080${this.user.avatar}`;\n      }).catch(errorHandler);\n    }\n  }\n};","map":{"version":3,"names":["getUserInfo","errorHandler","props","userId","Object","username","data","isMe","sessionStorage","getItem","user","methods","startChat","$message","warning","$router","push","onShowUserInfo","console","log","then","res","url","avatar","catch"],"sources":["src/components/message/UserChat.vue"],"sourcesContent":["<template>\r\n    <el-popover placement=\"top-start\" width=\"200\" trigger=\"click\" @show=\"onShowUserInfo\" :disabled=\"isMe\">\r\n        <el-card class=\"box-card\" shadow=\"never\">\r\n            <div slot=\"header\" class=\"contact-header\">\r\n                <el-avatar :src=\"user.url\" :size=\"30\" shape=\"square\" />\r\n                <el-link type=\"success\" style=\"float: right; padding: 3px\" @click=\"startChat\"\r\n                    icon=\"el-icon-chat-dot-round\" />\r\n            </div>\r\n            <el-descriptions :column=\"1\" size=\"mini\">\r\n                <el-descriptions-item label=\"Email\">{{ user.email }}</el-descriptions-item>\r\n                <el-descriptions-item label=\"Role\">{{ user.role }}</el-descriptions-item>\r\n                <el-descriptions-item label=\"Affiliation\">{{ user.affiliation }}</el-descriptions-item>\r\n                <el-descriptions-item label=\"preference\">{{ user.preference }}</el-descriptions-item>\r\n            </el-descriptions>\r\n        </el-card>\r\n        <el-link slot=\"reference\">\r\n            <span> {{ username }}</span>\r\n        </el-link>\r\n    </el-popover>\r\n</template>\r\n\r\n<script>\r\nimport { getUserInfo } from '@/api/FrontAPI';\r\nimport { errorHandler } from '@/utils/RequestUtils';\r\nexport default {\r\n    props: {\r\n        userId: Object,\r\n        username: Object,\r\n    },\r\n    data() {\r\n        return {\r\n            isMe: sessionStorage.getItem('userId') == this.userId,\r\n            user: {\r\n\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        startChat() {\r\n            if (this.userId == sessionStorage.getItem('userId')) {\r\n                this.$message.warning(\"Cannot chat with youself\")\r\n                return\r\n            }\r\n            this.$router.push('/chat/' + this.userId)\r\n        },\r\n        onShowUserInfo() {\r\n            console.log(this.isMe)\r\n            getUserInfo(this.userId)\r\n                .then((res) => {\r\n                    this.user = res\r\n                    this.user.url = `http://localhost:8080${this.user.avatar}`\r\n                })\r\n                .catch(errorHandler);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n    border: none;\r\n}\r\n.contact-header{\r\n    margin-top: -10px;\r\n    margin-bottom: -10px;\r\n}\r\n</style>"],"mappings":";AAsBA,SAAAA,WAAA;AACA,SAAAC,YAAA;AACA;EACAC,KAAA;IACAC,MAAA,EAAAC,MAAA;IACAC,QAAA,EAAAD;EACA;EACAE,KAAA;IACA;MACAC,IAAA,EAAAC,cAAA,CAAAC,OAAA,mBAAAN,MAAA;MACAO,IAAA,GAEA;IACA;EACA;EACAC,OAAA;IACAC,UAAA;MACA,SAAAT,MAAA,IAAAK,cAAA,CAAAC,OAAA;QACA,KAAAI,QAAA,CAAAC,OAAA;QACA;MACA;MACA,KAAAC,OAAA,CAAAC,IAAA,iBAAAb,MAAA;IACA;IACAc,eAAA;MACAC,OAAA,CAAAC,GAAA,MAAAZ,IAAA;MACAP,WAAA,MAAAG,MAAA,EACAiB,IAAA,CAAAC,GAAA;QACA,KAAAX,IAAA,GAAAW,GAAA;QACA,KAAAX,IAAA,CAAAY,GAAA,gCAAAZ,IAAA,CAAAa,MAAA;MACA,GACAC,KAAA,CAAAvB,YAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}